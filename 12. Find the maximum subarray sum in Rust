//Find the maximum subarray sum in Rust
fn max_subarray_sum(arr: &[i32]) -> i32 {
    if arr.is_empty() {
        return 0; // Return 0 for an empty array
    }
    let mut max_ending_here = arr[0];
    let mut max_so_far = arr[0];
    for &num in arr.iter().skip(1) {
        max_ending_here = max_ending_here.max(num);
        max_so_far = max_so_far.max(max_ending_here);
    }
    max_so_far
}
fn main() {
    let array = vec![-2, 1, -3, 4, -1, 2, 1, -5, 4, 9];
    let max_sum = max_subarray_sum(&array);
    println!("Maximum Subarray Sum: {}", max_sum);
}
 
